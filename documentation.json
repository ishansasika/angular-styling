{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AboutComponent",
            "id": "component-AboutComponent-a4f0423e663e929733288a6d2e0ae79fa1114286d93563f9f5b18e671165b26bb041cb0e282097ea0006458b6614a14b7dc25afe9b1205e36b9872fa904fd0c5",
            "file": "src/app/pages/about/about.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-about",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./about.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './about.component.html',\r\n  styleUrl: './about.component.css'\r\n})\r\nexport class AboutComponent {\r\n\r\n}\r\n",
            "styleUrl": "./about.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>about works!</p>\r\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-425b164b75d0667d5b692fce5337ce0e04d0ed2c216352aaf7a241b14394a4d218f91180a535e455b5ca6116bb74b194641b172aa9ddf2e1f5dec4c9d1042568",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'angular-styling'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { RouterOutlet } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: true,\r\n  imports: [RouterOutlet],\r\n  templateUrl: './app.component.html',\r\n  styleUrl: './app.component.css'\r\n})\r\nexport class AppComponent {\r\n  title = 'angular-styling';\r\n}\r\n",
            "styleUrl": "./app.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<router-outlet />\r\n"
        },
        {
            "name": "BareboneLayoutComponent",
            "id": "component-BareboneLayoutComponent-9ed099cdf994b586338e59c72e2b0cf9ca214cea887675c75f84ade3de38b0b457441f38103c46a93aa1e2a7e48fc2619f80a16a8be8dcf0410c127296c47a1d",
            "file": "src/app/layouts/barebone-layout/barebone-layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-barebone-layout",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./barebone-layout.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { RouterOutlet } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-barebone-layout',\r\n  standalone: true,\r\n  imports: [RouterOutlet],\r\n  templateUrl: './barebone-layout.component.html',\r\n  styleUrl: './barebone-layout.component.css',\r\n})\r\nexport class BareboneLayoutComponent {}\r\n",
            "styleUrl": "./barebone-layout.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"bare-layout\"><router-outlet /></div>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-51f376b6aacf272acd14aee6da45914312b5b41f1f1ace3d204f1529b93a6ebcfee4dfee0e3895aa6f6a91375f22cdc75f00949b99616a363fa25c8836b5b8f2",
            "file": "src/app/shared/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "shared-button",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nAlternative background color to use",
                    "description": "<p>Alternative background color to use</p>\n",
                    "line": 62,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "iconLeft",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nIf the button has a icon aligned in the left side",
                    "description": "<p>If the button has a icon aligned in the left side</p>\n",
                    "line": 47,
                    "type": "\"Arrow Back\" | \"Upload\" | \"Settings\" | \"Star\" | \"Add\" | \"Search\"",
                    "decorators": []
                },
                {
                    "name": "iconRight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nIf the button has a icon aligned in the right side",
                    "description": "<p>If the button has a icon aligned in the right side</p>\n",
                    "line": 51,
                    "type": "\"Arrow Forward\" | \"Delete\" | \"Close\" | \"Add\" | \"Upload\" | \"Search\" | \"Home\"",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button Label'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 976,
                            "end": 990,
                            "kind": 327,
                            "id": 0,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "tagName": {
                                "pos": 977,
                                "end": 985,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "rounded",
                    "defaultValue": "'none'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nHow rounded should the button be?",
                    "description": "<p>How rounded should the button be?</p>\n",
                    "line": 29,
                    "type": "\"none\" | \"small\" | \"medium\" | \"large\"",
                    "decorators": []
                },
                {
                    "name": "roundedType",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhat corners should the button be rounded?",
                    "description": "<p>What corners should the button be rounded?</p>\n",
                    "line": 32,
                    "type": "\"default\" | \"top-right-bottom-left\" | \"top-left-bottom-right\"",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nHow large should the button be?",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 25,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                },
                {
                    "name": "variant",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nColor variant for the button",
                    "description": "<p>Color variant for the button</p>\n",
                    "line": 13,
                    "type": "\"primary\" | \"secondary\" | \"success\" | \"warning\" | \"danger\" | \"info\" | \"light\" | \"dark\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOptional click handler",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 66,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "icons",
                    "defaultValue": "{\r\n    'Arrow Forward': 'arrow_forward',\r\n    'Arrow Back': 'arrow_back',\r\n    Upload: 'upload',\r\n    Delete: 'delete',\r\n    Settings: 'settings',\r\n    Star: 'star',\r\n    Close: 'close',\r\n    Add: 'add',\r\n    Search: 'search',\r\n    Home: 'home',\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 68
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\r\n@Component({\r\n  selector: 'shared-button',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './button.component.html',\r\n  styleUrl: './button.component.css',\r\n})\r\nexport class ButtonComponent {\r\n  /** Color variant for the button */\r\n  @Input()\r\n  variant:\r\n    | 'primary'\r\n    | 'secondary'\r\n    | 'success'\r\n    | 'warning'\r\n    | 'danger'\r\n    | 'info'\r\n    | 'light'\r\n    | 'dark' = 'primary';\r\n\r\n  /** How large should the button be? */\r\n  @Input()\r\n  size: 'small' | 'medium' | 'large' = 'medium';\r\n\r\n  /** How rounded should the button be? */\r\n  @Input()\r\n  rounded: 'none' | 'small' | 'medium' | 'large' = 'none';\r\n\r\n  /** What corners should the button be rounded? */\r\n  @Input() roundedType:\r\n    | 'default'\r\n    | 'top-right-bottom-left'\r\n    | 'top-left-bottom-right' = 'default';\r\n\r\n  /**\r\n   * Button contents\r\n   *\r\n   * @required\r\n   */\r\n  @Input()\r\n  label: string = 'Button Label';\r\n\r\n  /** If the button has a icon aligned in the left side*/\r\n  @Input()\r\n  iconLeft?: 'Arrow Back' | 'Upload' | 'Settings' | 'Star' | 'Add' | 'Search';\r\n\r\n  /** If the button has a icon aligned in the right side */\r\n  @Input()\r\n  iconRight?:\r\n    | 'Arrow Forward'\r\n    | 'Delete'\r\n    | 'Close'\r\n    | 'Add'\r\n    | 'Upload'\r\n    | 'Search'\r\n    | 'Home';\r\n\r\n  /** Alternative background color to use */\r\n  @Input()\r\n  backgroundColor?: string;\r\n\r\n  /** Optional click handler */\r\n  @Output()\r\n  onClick = new EventEmitter<Event>();\r\n\r\n  icons = {\r\n    'Arrow Forward': 'arrow_forward',\r\n    'Arrow Back': 'arrow_back',\r\n    Upload: 'upload',\r\n    Delete: 'delete',\r\n    Settings: 'settings',\r\n    Star: 'star',\r\n    Close: 'close',\r\n    Add: 'add',\r\n    Search: 'search',\r\n    Home: 'home',\r\n  };\r\n\r\n  public get classes(): string[] {\r\n    const variant = `shared-button--${this.variant}`;\r\n    const size = `shared-button--${this.size}`;\r\n    const rounded = `rounded--${this.rounded}`;\r\n\r\n    const roundedType = `rounded--${this.roundedType}`;\r\n    const iconLeft = this.iconLeft ? 'icon-left' : '';\r\n    const iconRight = this.iconRight ? 'icon-right' : '';\r\n    return [\r\n      'shared-button',\r\n      variant,\r\n      size,\r\n      rounded,\r\n      roundedType,\r\n      iconLeft,\r\n      iconRight,\r\n    ];\r\n  }\r\n}\r\n",
            "styleUrl": "./button.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 81
                    }
                }
            },
            "templateData": "<button\r\n  type=\"button\"\r\n  (click)=\"onClick.emit($event)\"\r\n  [ngClass]=\"classes\"\r\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n>\r\n  @if (iconLeft) {\r\n  <span class=\"material-icons-outlined\">{{ icons[iconLeft] }}</span>\r\n  }\r\n\r\n  {{ label }}\r\n\r\n  @if (iconRight) {\r\n  <span class=\"material-icons-outlined\">{{ icons[iconRight] }}</span>\r\n  }\r\n</button>\r\n"
        },
        {
            "name": "ContentLayoutComponent",
            "id": "component-ContentLayoutComponent-28486e8d469ee7c48cca69dac760ab946663c787d15e7c6295ec245a840c46f6b91a055462ce36a0ee22ab95b31e07c0470dbc21dfac8019130ec765476d6a39",
            "file": "src/app/layouts/content-layout/content-layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-content-layout",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./content-layout.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "FooterComponent",
                    "type": "component"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { FooterComponent } from '@shared/shell/footer/footer.component';\r\nimport { HeaderComponent } from '@shared/shell/header/header.component';\r\n\r\n@Component({\r\n  selector: 'app-content-layout',\r\n  standalone: true,\r\n  imports: [RouterOutlet, FooterComponent, HeaderComponent],\r\n  templateUrl: './content-layout.component.html',\r\n  styleUrl: './content-layout.component.css',\r\n})\r\nexport class ContentLayoutComponent {}\r\n",
            "styleUrl": "./content-layout.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<app-header />\r\n<div class=\"main-content\">\r\n  <router-outlet />\r\n</div>\r\n<app-footer />\r\n"
        },
        {
            "name": "ErrorComponent",
            "id": "component-ErrorComponent-8284d638ec43471ff820ad8604ed74db34150fc81f9be7e49cfcacd7725d22a89913afbce693c0294dfc783dc731820385f3223d6d02d056d6536aeea9a4e27f",
            "file": "src/app/pages/error/error.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-error",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./error.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ButtonComponent } from '@shared/components/button/button.component';\r\n\r\n@Component({\r\n  selector: 'app-error',\r\n  standalone: true,\r\n  imports: [CommonModule, ButtonComponent, RouterModule],\r\n  templateUrl: './error.component.html',\r\n  styleUrl: './error.component.css',\r\n})\r\nexport class ErrorComponent {}\r\n",
            "styleUrl": "./error.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"error-page\">\r\n  <div\r\n    class=\"container h-100 d-flex flex-column justify-content-center align-items-center gap-3\"\r\n  >\r\n    <p class=\"text-5xl\">Page Not Found</p>\r\n\r\n    <shared-button\r\n      label=\"Go to Home Page\"\r\n      size=\"large\"\r\n      rounded=\"medium\"\r\n      routerLink=\"/\"\r\n      iconRight=\"Home\"\r\n      variant=\"dark\"\r\n    />\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-d9fd279ba65160257f28809ff5129b0f931c685640e00ba10d26ed8e0c6f61f760593d772f016a65e82d55a0f249e5a4b4a3fc2a8a7d82ce364ef7971810e819",
            "file": "src/app/shared/shell/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-footer",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './footer.component.html',\r\n  styleUrl: './footer.component.css'\r\n})\r\nexport class FooterComponent {\r\n\r\n}\r\n",
            "styleUrl": "./footer.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"footer\">Footer</div>\r\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-9c1fa350e6f52ed8d33b80f6ac2c22ab905a2019860efea452052d0061910f0ab0716850366e38a34b65d8a0ded7888985c7266a269fb02a3b466d62c638cbbc",
            "file": "src/app/shared/shell/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "items",
                    "defaultValue": "[\r\n    { route: 'typography', label: 'Typography' },\r\n    { route: 'buttons', label: 'Buttons' },\r\n    { route: 'inputs', label: 'Inputs' },\r\n    { route: 'no-route', label: 'No Route' },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ButtonComponent } from '@shared/components/button/button.component';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterModule, ButtonComponent],\r\n  templateUrl: './header.component.html',\r\n  styleUrl: './header.component.css',\r\n})\r\nexport class HeaderComponent {\r\n  items: { route: string; label: string }[] = [\r\n    { route: 'typography', label: 'Typography' },\r\n    { route: 'buttons', label: 'Buttons' },\r\n    { route: 'inputs', label: 'Inputs' },\r\n    { route: 'no-route', label: 'No Route' },\r\n  ];\r\n}\r\n",
            "styleUrl": "./header.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"top-element bg-dark\">\r\n  <div class=\"container d-flex justify-content-between align-items-center\">\r\n    <a\r\n      href=\"mailto:ishansasika@gmail.com\"\r\n      class=\"d-flex gap-1 align-items-center text-decoration-none text-light\"\r\n    >\r\n      <span class=\"material-icons-outlined\">email</span>\r\n      ishansasika&#64;gmail.com\r\n    </a>\r\n\r\n    <a\r\n      href=\"tel:+94772199181\"\r\n      class=\"d-flex gap-1 align-items-center text-decoration-none text-light\"\r\n    >\r\n      <span class=\"material-icons-outlined\">phone</span>+94(77)2199181</a\r\n    >\r\n  </div>\r\n</div>\r\n<div class=\"header\">\r\n  <div\r\n    class=\"container d-flex justify-content-between align-items-center gap-3\"\r\n  >\r\n    <img src=\"assets/images/logo.webp\" alt=\"\" height=\"30\" />\r\n\r\n    <div class=\"nav-container d-flex gap-5\">\r\n      @for (item of items; track $index) {\r\n      <a\r\n        [routerLink]=\"item.route\"\r\n        class=\"text-decoration-none text-md el-messiri text-uppercase gap-2 text-nowrap\"\r\n      >\r\n        {{ item.label }}\r\n      </a>\r\n      }\r\n    </div>\r\n\r\n    <div class=\"d-flex align-items-center gap-3\">\r\n      <shared-button\r\n        variant=\"primary\"\r\n        size=\"large\"\r\n        rounded=\"medium\"\r\n        label=\"Sign In\"\r\n        iconRight=\"Arrow Forward\"\r\n      />\r\n      <shared-button\r\n        variant=\"secondary\"\r\n        size=\"large\"\r\n        rounded=\"medium\"\r\n        label=\"Sign Up\"\r\n        iconRight=\"Upload\"\r\n      />\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-e2c35c64404d06c442763d9f5ef489a03cfa387b81306e987aa603c180f146d9f6856e714ad4710a4c5c8a420155a8a8461c7796248a0a6ed69f8168aad92fce",
            "file": "src/app/pages/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "heroImages",
                    "defaultValue": "[\r\n    'assets/images/hero-1.webp',\r\n    'assets/images/hero-2.webp',\r\n    'assets/images/hero-3.webp',\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './home.component.html',\r\n  styleUrl: './home.component.css',\r\n})\r\nexport class HomeComponent {\r\n  heroImages: string[] = [\r\n    'assets/images/hero-1.webp',\r\n    'assets/images/hero-2.webp',\r\n    'assets/images/hero-3.webp',\r\n  ];\r\n}\r\n",
            "styleUrl": "./home.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"home-page\">\r\n  <div class=\"d-flex flex-column justify-content-center align-items-center\">\r\n    @for (image of heroImages; track $index) {\r\n    <img\r\n      [src]=\"image\"\r\n      [alt]=\"'hero' + $index\"\r\n      class=\"hero-image object-fit-cover opacity-75\"\r\n    />\r\n    }\r\n  </div>\r\n</div>\r\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n  providers: [provideRouter(routes), provideClientHydration()]\r\n}"
            },
            {
                "name": "bootstrap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/main.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => bootstrapApplication(AppComponent, config)"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "mergeApplicationConfig(appConfig, serverConfig)"
            },
            {
                "name": "serverConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n  providers: [\r\n    provideServerRendering()\r\n  ]\r\n}"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n  providers: [provideRouter(routes), provideClientHydration()]\r\n}"
                }
            ],
            "src/main.server.ts": [
                {
                    "name": "bootstrap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/main.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => bootstrapApplication(AppComponent, config)"
                }
            ],
            "src/app/app.config.server.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "mergeApplicationConfig(appConfig, serverConfig)"
                },
                {
                    "name": "serverConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n  providers: [\r\n    provideServerRendering()\r\n  ]\r\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 6,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "serverConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/barebone-layout/barebone-layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BareboneLayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/layouts/content-layout/content-layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ContentLayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/about/about.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AboutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/error/error.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ErrorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 81,
                "coverageCount": "9/11",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/shell/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/shell/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/main.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "bootstrap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}